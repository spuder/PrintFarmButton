name: Build ESPHome Firmware

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build ESP32-S3 firmware
        uses: esphome/build-action@v6
        with:
          yaml-file: firmware/esphome/esp32s3.yaml

      - name: List S3 build directory
        run: |
          echo "Listing S3 build directory after build:"
          ls -lhR firmware/esphome/.esphome/build || true

      - name: Move S3 firmware to output and generate md5
        shell: bash
        run: |
          set -e
          mkdir -p firmware/output
          S3_SRC=firmware/esphome/.esphome/build/printfarmbutton/firmware.bin
          if [ -f "$S3_SRC" ]; then
            cp "$S3_SRC" firmware/output/printfarmbutton-esp32s3.bin
            md5sum firmware/output/printfarmbutton-esp32s3.bin | awk '{print $1}' > firmware/output/printfarmbutton-esp32s3.bin.md5
          else
            echo "S3 firmware not found!"
            exit 1
          fi
          rm -rf firmware/esphome/.esphome/build

      - name: Build ESP32-C3 firmware
        uses: esphome/build-action@v6
        with:
          yaml-file: firmware/esphome/esp32c3.yaml

      - name: List C3 build directory
        run: |
          echo "Listing C3 build directory after build:"
          ls -lhR firmware/esphome/.esphome/build || true

      - name: Move C3 firmware to output and generate md5
        shell: bash
        run: |
          set -e
          mkdir -p firmware/output
          C3_SRC=firmware/esphome/.esphome/build/printfarmbutton/firmware.bin
          if [ -f "$C3_SRC" ]; then
            cp "$C3_SRC" firmware/output/printfarmbutton-esp32c3.bin
            md5sum firmware/output/printfarmbutton-esp32c3.bin | awk '{print $1}' > firmware/output/printfarmbutton-esp32c3.bin.md5
          else
            echo "C3 firmware not found!"
            exit 1
          fi
          rm -rf firmware/esphome/.esphome/build
          echo "Output directory contents after copy/rename:"
          ls -lh firmware/output

      - name: Create ESP Web Tools manifest file
        run: |
          echo '{"name": "PrintFarmButton", "version": "1.0.0", "builds": [ {"chipFamily": "ESP32", "parts": [{"path": "printfarmbutton-esp32s3.bin", "offset": 0}]}, {"chipFamily": "ESP32-C3", "parts": [{"path": "printfarmbutton-esp32c3.bin", "offset": 0}]} ]}' > firmware/output/manifest.json

      - name: List files in output directory
        run: |
          echo "Contents of firmware/output before git commit:"
          ls -lh firmware/output || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware-build
          path: firmware/output/

      - name: Commit and push build artifacts
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          # Only add files that exist
          if [ -f firmware/output/printfarmbutton-esp32s3.bin ]; then git add firmware/output/printfarmbutton-esp32s3.bin; fi
          if [ -f firmware/output/printfarmbutton-esp32c3.bin ]; then git add firmware/output/printfarmbutton-esp32c3.bin; fi
          if [ -f firmware/output/printfarmbutton-esp32s3.bin.md5 ]; then git add firmware/output/printfarmbutton-esp32s3.bin.md5; fi
          if [ -f firmware/output/printfarmbutton-esp32c3.bin.md5 ]; then git add firmware/output/printfarmbutton-esp32c3.bin.md5; fi
          git add firmware/output/manifest.json
          git commit -m "Update firmware build [skip ci]" || echo "No changes to commit"
          git push || echo "No changes to push"

      # Ensure all actions use supported versions (v3 or v4)
      # If you add caching, use actions/cache@v3 or actions/cache@v4
