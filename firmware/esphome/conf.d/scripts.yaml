script:
- id: connect_mqtt
  mode: queued
  then:
  - if:
      condition:
        lambda: 'return id(cloud_connection).state == "Bambu";'
      then:
      - if:
          condition:
            lambda: |
              return !id(bambu_ip_address).state.empty() &&
                     !id(bambu_lan_access_code).state.empty() &&
                     !id(bambu_serial_number).state.empty();
          then:
          # Credentials are set, check if we need to reconnect
          - if:
              condition:
                lambda: |
                  return id(last_cloud_state) != "Bambu" || !id(mqtt_client_id).is_connected();
              then:
              - logger.log: "Switching to Bambu or not connected, reconnecting..."
              - mqtt.disable:
                  id: mqtt_client_id
              - lambda: |
                  ESP_LOGI("mqtt", "Setting Bambu MQTT client with IP: %s, Serial: %s",
                         id(bambu_ip_address).state.c_str(), id(bambu_serial_number).state.c_str());
                  id(mqtt_client_id).set_broker_address(id(bambu_ip_address).state.c_str());
                  id(mqtt_client_id).set_broker_port(parse_number<uint16_t>(id(mqtt_port_bambu).state).value_or(8883));
                  id(mqtt_client_id).set_username("bblp");
                  id(mqtt_client_id).set_password(id(bambu_lan_access_code).state.c_str());
                  //id(mqtt_client_id).set_ca_certificate(R"EOF(-----BEGIN CERTIFICATE-----\nMIIDZTCCAk2gAwIBAgIUV1FckwXElyek1onFnQ9kL7Bk4N8wDQYJKoZIhvcNAQEL\nBQAwQjELMAkGA1UEBhMCQ04xIjAgBgNVBAoMGUJCTCBUZWNobm9sb2dpZXMgQ28u\nLCBMdGQxDzANBgNVBAMMBkJCTCBDQTAeFw0yMjA0MDQwMzQyMTFaFw0zMjA0MDEw\nMzQyMTFaMEIxCzAJBgNVBAYTAkNOMSIwIAYDVQQKDBlCQkwgVGVjaG5vbG9naWVz\nIENvLiwgTHRkMQ8wDQYDVQQDDAZCQkwgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\nDwAwggEKAoIBAQDL3pnDdxGOk5Z6vugiT4dpM0ju+3Xatxz09UY7mbj4tkIdby4H\noeEdiYSZjc5LJngJuCHwtEbBJt1BriRdSVrF6M9D2UaBDyamEo0dxwSaVxZiDVWC\neeCPdELpFZdEhSNTaT4O7zgvcnFsfHMa/0vMAkvE7i0qp3mjEzYLfz60axcDoJLk\np7n6xKXI+cJbA4IlToFjpSldPmC+ynOo7YAOsXt7AYKY6Glz0BwUVzSJxU+/+VFy\n/QrmYGNwlrQtdREHeRi0SNK32x1+bOndfJP0sojuIrDjKsdCLye5CSZIvqnbowwW\n1jRwZgTBR29Zp2nzCoxJYcU9TSQp/4KZuWNVAgMBAAGjUzBRMB0GA1UdDgQWBBSP\nNEJo3GdOj8QinsV8SeWr3US+HjAfBgNVHSMEGDAWgBSPNEJo3GdOj8QinsV8SeWr\n3US+HjAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQABlBIT5ZeG\nfgcK1LOh1CN9sTzxMCLbtTPFF1NGGA13mApu6j1h5YELbSKcUqfXzMnVeAb06Htu\n3CoCoe+wj7LONTFO++vBm2/if6Jt/DUw1CAEcNyqeh6ES0NX8LJRVSe0qdTxPJuA\nBdOoo96iX89rRPoxeed1cpq5hZwbeka3+CJGV76itWp35Up5rmmUqrlyQOr/Wax6\nitosIzG0MfhgUzU51A2P/hSnD3NDMXv+wUY/AvqgIL7u7fbDKnku1GzEKIkfH8hm\nRs6d8SCU89xyrwzQ0PR853irHas3WrHVqab3P+qNwR0YirL0Qk7Xt/q3O1griNg2\nBlbjg3obpHo9\n-----END CERTIFICATE-----)EOF");
                  id(last_cloud_state) = "Bambu";
              - mqtt.enable:
                  id: mqtt_client_id
              else:
              - logger.log: "Bambu MQTT already connected and configured."
          else:
          # Bambu selected but no credentials, ensure it's disconnected
          - logger.log: "Missing Bambu credentials, ensuring MQTT is disconnected."
          - mqtt.disable:
              id: mqtt_client_id
  - if:
      condition:
        lambda: 'return id(cloud_connection).state == "Printago";'
      then:
      - if:
          condition:
            lambda: |
              return !id(printer_id).state.empty() &&
                     !id(username_text).state.empty() &&
                     !id(mqtt_endpoint_text).state.empty();
          then:
          # Credentials are set, check if we need to connect
          - if:
              condition:
                lambda: |
                  return id(last_cloud_state) != "Printago" || !id(mqtt_client_id).is_connected();
              then:
              - logger.log: "Switching to Printago or not connected, connecting..."
              - mqtt.disable:
                  id: mqtt_client_id
              - lambda: |
                  // Generate client_id with format: apiclient_<username>_<random_suffix>
                  std::string client_id = "apiclient_" + id(username_text).state + "_" + std::to_string(random_uint32());
                  ESP_LOGI("mqtt", "Setting client_id to: %s", client_id.c_str());

                  id(mqtt_client_id).set_broker_address(id(mqtt_endpoint_text).state.c_str());
                  id(mqtt_client_id).set_broker_port(parse_number<uint16_t>(id(mqtt_port_printago).state).value_or(1883));
                  id(mqtt_client_id).set_username(id(username_text).state.c_str());
                  id(mqtt_client_id).set_password(id(api_key_text).state.c_str());
                  id(mqtt_client_id).set_client_id(client_id.c_str());
                  id(mqtt_client_id).set_ca_certificate("");
                  id(last_cloud_state) = "Printago";
              - script.execute: clear_printago_status
              - mqtt.enable:
                  id: mqtt_client_id
              else:
              - logger.log: "Printago MQTT already connected."
          else:
          # Printago selected but no credentials, ensure it's disconnected
          - logger.log: "Missing Printago credentials, ensuring MQTT is disconnected."
          - mqtt.disable:
              id: mqtt_client_id

# - id: subscribe_bambu_topics
#   mode: queued
#   then:
#   - lambda: |
#       if (id(cloud_connection).state != "Bambu") {
#         return;
#       }
#       if (!id(bambu_serial_number).state.empty()) {
#         auto topic = "device/" + id(bambu_serial_number).state + "/report";
#         id(mqtt_client_id).subscribe_json(topic.c_str(), 0);
#         ESP_LOGI("mqtt", "Subscribed to Bambu topic: %s", topic.c_str());
#       }
